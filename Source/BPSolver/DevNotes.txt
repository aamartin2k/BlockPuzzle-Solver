Refactor:
  Class Piece:
   --Hacer Matrix propiedad private set;
   --  Implica cambios en Factory NewSolver CreatePieceSet()
   -- Hace static method que devuelva coord reales en basea insert point (ins point)

   --Establecer primer elem como default en tsbutoons piece

   --Impl Modo Gridcelldrawing _  click nextpiece 
     chequear cambios de estado:
	  Deleting a NextPiece, mantener Delete
	  Deleting a ToolPiecde, cambiar a PieceSetting

Controller
--Implementar Play, borrar nextPiece
--Modular opciones de chequeo
--eliminar chequeo de completamiento de Draw
--Implementar cloning de gameStatus
--Implementar actualizar lista de hijos
--Implementar descripcion del movimiento
--Mejorar impl de estadisticas, quitar de GameStatus y pasar a Meta

*********
Analizar implicaciones de Jugada y Undo
 ?al crearse nuevo estado por jugada se resetea UndoStack. Una vez que se
 ha jugado sobre un status, forma parte de la secuencia de juego y no puede ser cambiado.
 En un status jugado solo se puede incorporar la nextPiece borrada.
 En un status jugado se puede jugar una nexpiece y da lugar a una bifurcacion
 Solo se puede editar el grid en el estado actual (no jugado)
 *********

  --IMPLEMENTAR en cada cambio de estado se resetea Stack
 --al hacer jugada en ultimo nodo, por defecto se crea un estado hijo y se avanza,
 ***************
Revisar GUI state Machine
 cambios sobre NextPiece}
	
--Revisar Comandos, unificr referencia a GameStatus
--Implementar Factory para GameStatus, etc
 --Al terminar, revisar/implementar GameStatus Id - private set

 --Revisar Error null reference al abrir Nuevo1.bmd
   Se creo como nuevo y salvar, revisar contenido de file y compara con otros, 
    tiene poco tamaño, no se ha salvado el estado

 --Implementar filtrado de soluciones en Form, solo mostrar  las que 
 completan RoC.

 Implementar interface y clase Board que exponga cells by class o by struct

 Revisar pasar metodos de Solhandler que solo se llaman desd GameHandler 
 pasar para Gamehandler o clase utileria

 --Re implementado PieceSet
   Pasando funciones comunes a clase utileria Shared.Utils
	--SolHandler.UpdateGameStatsAfterPlay
    --SolHandler.UpdateGameStatsAfterDraw

   --Implementar nuevo Board
   -Eliminar/Unificar funciones que actuan sobre GameStatus/GameSimpleStatus: TestPiece. TestPieceNuevo
   -Unificar uso de GameStatus para Game *  y Solution
     unificar uso de GameTreeNode en solution sustituyendo a GameTreeNode
   --Convertir Archivos

   --Borarr files: IOHandlerAux.cs
   Revisar metodos que terminan en Nuevo 
   Revisar borrar en Form methods relacionados con animacion: In_SelectRows, In_SelectColumns

   //TODO implement draw temp
   buscar ref en archivos
   implementar CellCollection para marcar desmarcar celdas
   implementar _mouseLeaveHandler Sgrid controller para evento mouseleave en grid
   implementar acceso desde form a TestPiece, parametro CellCollection en vez de GameStatus
    test order events mouseEnter, mouseLeave en SGrid

	IMplementar en class Cell metodo Property que retorne Coord
	Implementando DrawPreview dentro de StateMachine
